{"version":3,"sources":["redux/actionsTypes.js","redux/reducers/themeReducer.js","redux/reducers/taskReducer.js","redux/reducers/rootReducer.js","redux/store.js","components/TodoTheme/AppTodoTheme.js","components/TodoTheme/TodoThemeContainer.js","redux/actions/actions.js","components/TodoForm/AppTodoForm.js","components/TodoForm/TodoFormContainer.js","components/TodoItem/AppTodoItem.js","components/TodoItem/TodoItemContainer.js","components/TodoList/AppTodoList.js","components/TodoList/TodoListContainer.js","components/TodoWindow/AppTodoWindow.js","components/TodoWindow/TodoWindowContainer.js","App.js","reportWebVitals.js","index.js"],"names":["TYPE_THEME","TYPE_TASK","initState","theme","themeReducer","state","action","type","payload","taskReducer","id","Date","now","text","status","statusArr","indexStatus","findIndex","item","task","length","map","filter","rootReducer","combineReducers","store","createStore","composeWithDevTools","AppTodoThem","param","themeChange","className","onClick","connect","dispatch","themeName","AppTodoTheme","AppTodoForm","addTask","useState","inputState","cangeInputState","submitTask","event","preventDefault","trim","onSubmit","onChange","currentTarget","value","onKeyDown","key","placeholder","autoFocus","taskText","AppTodoItem","index","changeStatus","deleteTask","idItem","AppTodoList","items","AppTodoWindow","TodoListContainer","App","TodoThemeContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b9d2d7d.chunk.js","sourcesContent":["export const TYPE_THEME = {\r\n    CHANGE: 'CHANGE',\r\n};\r\n\r\nexport const TYPE_TASK = {\r\n    ADD: 'ADD',\r\n    CANGE_STATUS: 'CANGE_STATUS',\r\n    DELETE: 'DELETE'\r\n};","import { TYPE_THEME } from \"../actionsTypes\";\r\n\r\nconst initState = {\r\n    theme: 'dark'\r\n};\r\n\r\nconst themeReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case TYPE_THEME.CHANGE:\r\n            return {...state, theme : action.payload.theme};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default themeReducer;","import { TYPE_TASK } from \"../actionsTypes\";\r\n\r\nconst initState = [];\r\n\r\nconst taskReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case TYPE_TASK.ADD:\r\n            return [...state, {id : Date.now(), text : action.payload.text, status: 'default'}];\r\n        case TYPE_TASK.CANGE_STATUS:\r\n            const statusArr = ['default', 'success', 'fail'];\r\n            let indexStatus = statusArr.findIndex(item => item === action.payload.task.status);\r\n            indexStatus++;\r\n            if(indexStatus + 1 > statusArr.length){\r\n                indexStatus = 0;\r\n            }\r\n            return [...state.map(item => item.id !== action.payload.task.id ? {...item} : {...item, status: statusArr[indexStatus]})];\r\n        case TYPE_TASK.DELETE:\r\n            return [...state.filter(item => item.id !== action.payload.id)];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default taskReducer;","import { combineReducers } from \"redux\";\r\nimport themeReducer from \"./themeReducer\";\r\nimport taskReducer from \"./taskReducer\";\r\n\r\nconst rootReducer = combineReducers(\r\n    {\r\n        taskReducer : taskReducer,\r\n        themeReducer : themeReducer,\r\n    }\r\n);\r\n\r\nexport default rootReducer;","import rootReducer from \"./reducers/rootReducer\";\r\nimport { createStore } from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer,  \r\n    composeWithDevTools()\r\n);\r\n\r\nexport default store;\r\n","const AppTodoThem = ({param, themeChange = () => {}}) => {\r\n    return(\r\n        <>\r\n            <div className={\"bg bg--\" + param.theme}>\r\n            </div>\r\n            <div className=\"toggle-theme toggle-theme__margin\">\r\n                <div\r\n                    className=\"toggle-theme__btn-left\"\r\n                    onClick={() => themeChange('dark')}\r\n                ></div>\r\n                <div\r\n                    className=\"toggle-theme__btn-right\"\r\n                    onClick={() => themeChange('light')}\r\n                ></div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AppTodoThem;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport AppTodoTheme from \"../TodoTheme/AppTodoTheme\";\r\nimport {themeChange} from \"../../redux/actions/actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    param:{\r\n\t\ttheme: state.themeReducer.theme,\r\n    }\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tthemeChange(themeName) {\r\n\t\tdispatch(themeChange(themeName));\r\n\t}\r\n});\r\n\r\nconst TodoThemContainer = ({param, themeChange}) => (\r\n\t<AppTodoTheme param={param} themeChange={themeChange} />\r\n);\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(TodoThemContainer);","import { TYPE_THEME, TYPE_TASK } from \"../actionsTypes\";\r\n\r\nexport const themeChange = themeName => ({ type: TYPE_THEME.CHANGE, payload: {theme: themeName}});\r\nexport const addTask = taskText => ({type: TYPE_TASK.ADD, payload: {text: taskText}});\r\nexport const changeStatus = task => ({type: TYPE_TASK.CANGE_STATUS, payload: {task: task}});\r\nexport const deleteTask = idItem => ({type: TYPE_TASK.DELETE, payload: {id: idItem}});","import React, {useState} from \"react\";\r\n\r\nconst AppTodoForm = ({param, addTask = () => {}}) => {\r\n    const [inputState, cangeInputState] = useState('');\r\n\r\n    const changeInput = event => {\r\n        cangeInputState(event.currentTarget.value);\r\n    };\r\n\r\n    const submitTask = event => {\r\n        event.preventDefault();\r\n        addTask(inputState.trim());\r\n        cangeInputState('');\r\n    };\r\n\r\n    const presteEnter = event => {\r\n        if(event.key === 'Enter'){\r\n            submitTask(event);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <form \r\n            className=\"todo-window__form\"\r\n            onSubmit={submitTask}\r\n        >\r\n            <input\r\n                className=\"todo-window__input\"\r\n                onChange={changeInput}\r\n                onKeyDown={presteEnter}\r\n                value={inputState}\r\n                placeholder=\"Введите задание\"\r\n                autoFocus\r\n            />\r\n            <button\r\n                className=\"todo-window__btn\"\r\n            >\r\n                Добавить\r\n            </button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default AppTodoForm;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport AppTodoForm from \"./AppTodoForm\";\r\nimport {addTask} from \"../../redux/actions/actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    param:{\r\n        theme: state.themeReducer.theme\r\n    }\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\taddTask(taskText) {\r\n\t\tdispatch(addTask(taskText));\r\n\t}\r\n});\r\n\r\nconst TodoFormContainer = ({param, addTask}) => (\r\n    <AppTodoForm param={param} addTask={addTask} />\r\n);\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(TodoFormContainer);","import React from \"react\";\r\n\r\nconst AppTodoItem = ({index, param, item, changeStatus = () => {}, deleteTask = () => {}}) => {\r\n    return(\r\n        <div className={\"todo-list__item todo-list__item-\" + item.status}>\r\n            <div \r\n                className=\"todo-list__index\"\r\n            >\r\n                {index}.\r\n            </div>\r\n            <div \r\n                className=\"todo-list__text\"\r\n                onClick={() => changeStatus(item)}\r\n            >\r\n                {item.text}\r\n            </div>\r\n            <div \r\n                className=\"todo-list__icon\"\r\n                onClick={() => deleteTask(item.id)}\r\n            >\r\n                <div className=\"todo-list__delete\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AppTodoItem;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport AppTodoItem from \"../TodoItem/AppTodoItem\";\r\nimport {changeStatus, deleteTask} from \"../../redux/actions/actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    param:{\r\n\t\ttheme: state.themeReducer.theme,\r\n    }\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tchangeStatus(task) {\r\n\t\tdispatch(changeStatus(task));\r\n\t},\r\n\tdeleteTask(idItem) {\r\n\t\tdispatch(deleteTask(idItem));\r\n\t}\r\n});\r\n\r\nconst TodoItemContainer = ({index, param, item, changeStatus, deleteTask}) => (\r\n\t<AppTodoItem index={index} param={param} item={item} changeStatus={changeStatus} deleteTask={deleteTask} />\r\n);\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(TodoItemContainer);","import React from \"react\";\r\nimport TodoItemContainer from \"../TodoItem/TodoItemContainer\";\r\n\r\nconst AppTodoList = ({param}) => {\r\n\r\n    const setList = () => {\r\n        if(param.items.length){\r\n            return(\r\n                <div className=\"todo-list__items\">\r\n                    {param.items.map((item, index) => <TodoItemContainer key={item.id} index={index + 1} item={item} />)}\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className=\"todo-list__not-items\">\r\n                    Нет задч на сегодня\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"todo-list\">\r\n            { setList() }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AppTodoList;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport AppTodoList from \"./AppTodoList\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    param:{\r\n        items: state.taskReducer\r\n    }\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n});\r\n\r\nconst TodoListConrainer = ({param}) => (\r\n    <AppTodoList param={param} />\r\n);\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(TodoListConrainer);","import React from \"react\";\r\nimport TodoFormContainer from \"./../TodoForm/TodoFormContainer\";\r\nimport TodoListContainer from \"../TodoList/TodoListContainer\";\r\n\r\nconst AppTodoWindow = ({param}) => {\r\n    return(\r\n        <main className={\"todo-window todo-window--\" + param.theme}>\r\n          <TodoFormContainer />\r\n          <TodoListContainer />\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default AppTodoWindow;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport AppTodoWindow from \"../TodoWindow/AppTodoWindow\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    param:{\r\n\t\ttheme: state.themeReducer.theme,\r\n    }\r\n});\r\n\r\nconst TodoWindowContainer = ({param}) => (\r\n\t<AppTodoWindow param={param} />\r\n);\r\n\r\nexport default connect(\r\n\tmapStateToProps\r\n)(TodoWindowContainer);","import React from 'react';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport TodoThemeContainer from './components/TodoTheme/TodoThemeContainer';\nimport TodoWindowContainer from './components/TodoWindow/TodoWindowContainer';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <TodoThemeContainer />\n        <TodoWindowContainer />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}